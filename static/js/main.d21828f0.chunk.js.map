{"version":3,"sources":["Components/App/diceBag.js","Components/Timer/Timer.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["diceBag","fourByFOurDice","fiveByFiveDice","sixBySixDice","Timer","useState","timer","setTimer","timerStart","setTimerStart","playing","setPlaying","intervalId","setIntervalId","isTimeUp","setIsTimeUp","countdownClassName","className","onClick","clearInterval","seconds","split","newIntervalId","setInterval","newTimer","Math","floor","onChange","e","target","value","defaultValue","vlaue","App","board","setBoard","useEffect","newBoard","dice","Array","from","length","random","map","idx","array","i","j","shakeDice","pasteBoard","a","navigator","clipboard","readText","codedBoard","decodedBoard","String","fromCharCode","charCodeAt","index","key","name","copyText","join","writeText","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mRAsFeA,EAtFC,CACdC,eAAgB,CACd,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAC1B,UAEFC,eAAgB,CACd,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/B,SACA,SACA,SACA,UAEFC,aAAc,CACZ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/B,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,CAAC,IAAK,IAAK,KAAM,IAAK,IAAK,KAC3B,SACA,WCdWC,G,YAjED,WAAO,IAAD,EACQC,mBAAS,SADjB,mBACXC,EADW,KACJC,EADI,OAEkBF,mBAAS,SAF3B,mBAEXG,EAFW,KAECC,EAFD,OAGYJ,oBAAS,GAHrB,mBAGXK,EAHW,KAGFC,EAHE,OAIkBN,qBAJlB,mBAIXO,EAJW,KAICC,EAJD,OAKcR,oBAAS,GALvB,mBAKXS,EALW,KAKDC,EALC,KAwCdC,EAAqB,YAGzB,OAFIF,IAAUE,GAAsB,uBAGlC,yBAAKC,UAAU,mBACb,4BAAQC,QAhCW,WACrB,GAAKR,EAkBMA,IACTC,GAAW,GACXQ,cAAcP,GACdL,EAASC,GACLM,GAAUC,GAAY,QAtBd,CACZJ,GAAW,GACX,IAAIS,EAAgC,GAAtBd,EAAMe,MAAM,KAAK,GAAgC,EAAtBf,EAAMe,MAAM,KAAK,GACtDC,EAAgBC,aAAY,WAC9B,GAAIH,EAAU,EAAG,CACfA,IACA,IAAII,EACF,IACAC,KAAKC,MAAMN,EAAU,IACrB,KACCA,EAAU,GAAK,EAAIA,EAAU,GAAK,IAAOA,EAAU,IACtDb,EAASiB,QAETL,cAAcP,GACdG,GAAY,KAEb,KACHF,EAAcS,MAcoBZ,EAAU,QAAU,SACtD,8BACCA,EACC,uBAAGO,UAAWD,GACZ,2BAAIV,IAGN,4BAAQqB,SA7CK,SAACC,GAClB,IAAIJ,EAAWI,EAAEC,OAAOC,MACxBvB,EAASiB,GACTf,EAAce,IA0CoBO,aAAcvB,GAC1C,4BAAQwB,MAAM,MAAd,SACA,4BAAQA,MAAM,MAAd,SACA,4BAAQA,MAAM,OAAd,SACA,4BAAQA,MAAM,OAAd,SACA,4BAAQA,MAAM,OAAd,SACA,4BAAQA,MAAM,OAAd,aC6DKC,MArHf,WAAgB,IAAD,EACa5B,mBAAS,IADtB,mBACN6B,EADM,KACCC,EADD,KAGbC,qBAAU,WACRD,EAASE,EAASrC,EAAQG,iBACzB,IAEH,IAAMkC,EAAW,SAACC,GAChB,IAIMJ,EAJaK,MAAMC,KAAK,CAAEC,OAAQH,EAAKG,SAAU,kBACrDhB,KAAKC,MAAsB,EAAhBD,KAAKiB,aAGOC,KAAI,SAACb,EAAOc,GAAR,OAAgBN,EAAKM,GAAKd,MAWvD,OAPA,SAAmBe,GACjB,IAAK,IAAIC,EAAID,EAAMJ,OAAS,EAAGK,EAAI,EAAGA,IAAK,CACzC,IAAMC,EAAItB,KAAKC,MAAMD,KAAKiB,UAAYI,EAAI,IADD,EAElB,CAACD,EAAME,GAAIF,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAME,GAFwB,MAH7CC,CAAUd,GASHA,GA6BHe,EAAU,uCAAG,8BAAAC,EAAA,sEACQC,UAAUC,UAAUC,WAD5B,OACXC,EADW,QAEXC,EAAeD,EAAWjC,MAAM,cAAcsB,KAAI,SAACb,GACvD,MAAc,MAAVA,GAAkC,IAAjBA,EAAMW,OAClBX,EACY,MAAVA,EAAsB,IAC1B0B,OAAOC,aAAa3B,EAAM4B,WAAW,GAAK,OAElCjB,SAAWP,EAAMO,QAAQN,EAASoB,GARlC,2CAAH,qDAsBhB,OACE,yBAAKtC,UAAU,OACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAW,SACbiB,EAAMS,KAAI,SAACb,EAAO6B,GAAR,OACT,yBACEC,IAAKD,EACL1C,UACmB,KAAjBiB,EAAMO,OACF,iBACiB,KAAjBP,EAAMO,OACN,iBACA,kBAGLX,QAKT,yBAAKb,UAAU,WACb,yBAAKA,UAAU,QACb,4BAAQC,QAxEC,WACA,KAAjBgB,EAAMO,OACFN,EAASE,EAASrC,EAAQC,iBACT,KAAjBiC,EAAMO,OACNN,EAASE,EAASrC,EAAQE,iBAC1BiC,EAASE,EAASrC,EAAQG,iBAmEtB,iBACA,4BACE0D,KAAK,uBACLlC,SAnEY,SAACC,GAEvB,OADgBA,EAAEC,OAAOC,OAEvB,IAAK,iBACHK,EAASE,EAASrC,EAAQC,iBAC1B,MACF,IAAK,iBACHkC,EAASE,EAASrC,EAAQE,iBAC1B,MACF,IAAK,eACHiC,EAASE,EAASrC,EAAQG,eAC1B,MACF,QACEgC,EAASE,EAASrC,EAAQE,mBAuDpB6B,aAAa,gBAEb,4BAAQD,MAAM,kBAAd,OACA,4BAAQA,MAAM,kBAAd,OACA,4BAAQA,MAAM,gBAAd,SAGJ,4BAAQZ,QA9CE,WAChB,IAMI4C,EANc5B,EAAMS,KAAI,SAACb,GAC3B,MAAc,MAAVA,GAAkC,IAAjBA,EAAMW,OAClBX,EACY,MAAVA,EAAsB,IAC1B0B,OAAOC,aAAa3B,EAAM4B,WAAW,GAAK,MAExBK,KAAK,IAChCZ,UAAUC,UAAUY,UAAUF,KAsCxB,cACA,4BAAQ5C,QAAS+B,GAAjB,mBCvGJgB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BtB,UAAUuB,cACPC,SAASH,GACTI,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf/B,UAAUuB,cAAcS,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAAST,KAMlBO,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDYnB,SAAkBrB,GACvB,GAA6C,kBAAmBtB,UAAW,CAGzE,GADkB,IAAI4C,IAAIC,WAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMwB,WAAN,sBAEP/B,IAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,GACHI,MAAK,SAACyB,GAEL,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CvD,UAAUuB,cAAciC,MAAM/B,MAAK,SAACC,GAClCA,EAAa+B,aAAahC,MAAK,WAC7BT,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFAyB,CAAwBtC,EAAOC,GAI/BtB,UAAUuB,cAAciC,MAAM/B,MAAK,WACjCQ,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCrC/BC,K","file":"static/js/main.d21828f0.chunk.js","sourcesContent":["const diceBag = {\r\n  fourByFOurDice: [\r\n    \"AAEEGN\",\r\n    \"ABBJOO\",\r\n    \"ACHOPS\",\r\n    \"AFFKPS\",\r\n    \"AOOTTW\",\r\n    \"CIMOTU\",\r\n    \"DEILRX\",\r\n    \"DELRVY\",\r\n    \"DISTTY\",\r\n    \"EEGHNW\",\r\n    \"EEINSU\",\r\n    \"EHRTVW\",\r\n    \"EIOSST\",\r\n    \"ELRTTY\",\r\n    [\"H\", \"I\", \"M\", \"N\", \"U\", \"Qu\"],\r\n    \"HLNNRZ\"\r\n  ],\r\n  fiveByFiveDice: [\r\n    \"AAAFRS\",\r\n    \"AAEEEE\",\r\n    \"AAFIRS\",\r\n    \"ADENNN\",\r\n    \"AEEEEM\",\r\n    \"AEEGMU\",\r\n    \"AEGMNN\",\r\n    \"AFIRSY\",\r\n    \"BBJKXZ\",\r\n    \"CCENST\",\r\n    \"EIILST\",\r\n    \"CEIPST\",\r\n    \"DDHNOT\",\r\n    \"DHHLOR\",\r\n    \"DHHNOW\",\r\n    \"DHLNOR\",\r\n    \"EIIITT\",\r\n    \"EILPST\",\r\n    \"EMOTTT\",\r\n    \"ENSSSU\",\r\n    [\"Qu\", \"In\", \"Th\", \"Er\", \"He\", \"An\"], // Alternate cube is: FIPRSY\r\n    \"GORRVW\",\r\n    \"IPRSYY\",\r\n    \"NOOTUW\",\r\n    \"OOOTTU\"\r\n  ],\r\n  sixBySixDice: [\r\n    \"AAAFRS\",\r\n    \"AAEEEE\",\r\n    \"AAEEOO\",\r\n    \"AAFIRS\",\r\n    \"ABDEIO\",\r\n    \"ADENNN\",\r\n    \"AEEEEM\",\r\n    \"AEEGMU\",\r\n    \"AEGMNN\",\r\n    \"AEILMN\",\r\n    \"AEINOU\",\r\n    \"AFIRSY\",\r\n    [\"An\", \"Er\", \"He\", \"In\", \"Qu\", \"Th\"],\r\n    \"BBJKXZ\",\r\n    \"CCENST\",\r\n    \"CDDLNN\",\r\n    \"CEIITT\",\r\n    \"CEIPST\",\r\n    \"CFGNUY\",\r\n    \"DDHNOT\",\r\n    \"DHHLOR\",\r\n    \"DHHNOW\",\r\n    \"DHLNOR\",\r\n    \"EHILRS\",\r\n    \"EIILST\",\r\n    \"EILPST\",\r\n    \"EIO###\",\r\n    \"EMTTTO\",\r\n    \"ENSSSU\",\r\n    \"GORRVW\",\r\n    \"HIRSTV\",\r\n    \"HOPRST\",\r\n    \"IPRSYY\",\r\n    [\"J\", \"K\", \"Qu\", \"W\", \"X\", \"Z\"],\r\n    \"NOOTUW\",\r\n    \"OOOTTU\"\r\n  ]\r\n};\r\n\r\nexport default diceBag;\r\n","import React, { useState } from \"react\";\r\nimport \"./Timer.css\";\r\n\r\nconst Timer = () => {\r\n  const [timer, setTimer] = useState(\"04:00\");\r\n  const [timerStart, setTimerStart] = useState(\"04:00\");\r\n  const [playing, setPlaying] = useState(false);\r\n  const [intervalId, setIntervalId] = useState();\r\n  const [isTimeUp, setIsTimeUp] = useState(false);\r\n\r\n  const setTimerTo = (e) => {\r\n    let newTimer = e.target.value;\r\n    setTimer(newTimer);\r\n    setTimerStart(newTimer);\r\n  };\r\n\r\n  const startCountdown = () => {\r\n    if (!playing) {\r\n      setPlaying(true);\r\n      let seconds = timer.split(\":\")[0] * 60 + timer.split(\":\")[1] * 1;\r\n      let newIntervalId = setInterval(() => {\r\n        if (seconds > 0) {\r\n          seconds--;\r\n          let newTimer =\r\n            \"0\" +\r\n            Math.floor(seconds / 60) +\r\n            \":\" +\r\n            (seconds % 60 > 9 ? seconds % 60 : \"0\" + (seconds % 60));\r\n          setTimer(newTimer);\r\n        } else {\r\n          clearInterval(intervalId);\r\n          setIsTimeUp(true);\r\n        }\r\n      }, 1000);\r\n      setIntervalId(newIntervalId);\r\n    } else if (playing) {\r\n      setPlaying(false);\r\n      clearInterval(intervalId);\r\n      setTimer(timerStart);\r\n      if (isTimeUp) setIsTimeUp(false);\r\n    }\r\n  };\r\n\r\n  let countdownClassName = \"counddown\";\r\n  if (isTimeUp) countdownClassName += \" countdown__time-up\";\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <button onClick={startCountdown}>{playing ? \"Reset\" : \"Start\"}</button>\r\n      <div></div>\r\n      {playing ? (\r\n        <p className={countdownClassName}>\r\n          <b>{timer}</b>\r\n        </p>\r\n      ) : (\r\n        <select onChange={setTimerTo} defaultValue={timerStart}>\r\n          <option vlaue=\"60\">01:00</option>\r\n          <option vlaue=\"90\">01:30</option>\r\n          <option vlaue=\"120\">02:00</option>\r\n          <option vlaue=\"180\">03:00</option>\r\n          <option vlaue=\"240\">04:00</option>\r\n          <option vlaue=\"300\">05:00</option>\r\n        </select>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport diceBag from \"./diceBag\";\r\nimport \"./App.css\";\r\nimport Timer from \"../Timer/Timer\";\r\n\r\nfunction App() {\r\n  const [board, setBoard] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setBoard(newBoard(diceBag.sixBySixDice));\r\n  }, []);\r\n\r\n  const newBoard = (dice) => {\r\n    const emptyBoard = Array.from({ length: dice.length }, () =>\r\n      Math.floor(Math.random() * 6)\r\n    );\r\n\r\n    const board = emptyBoard.map((value, idx) => dice[idx][value]);\r\n\r\n    shakeDice(board);\r\n\r\n    function shakeDice(array) {\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n    }\r\n\r\n    return board;\r\n  };\r\n\r\n  const resetBoard = () => {\r\n    board.length === 16\r\n      ? setBoard(newBoard(diceBag.fourByFOurDice))\r\n      : board.length === 25\r\n      ? setBoard(newBoard(diceBag.fiveByFiveDice))\r\n      : setBoard(newBoard(diceBag.sixBySixDice));\r\n  };\r\n\r\n  const changeBoardSize = (e) => {\r\n    let boardSize = e.target.value;\r\n    switch (boardSize) {\r\n      case \"fourByFOurDice\":\r\n        setBoard(newBoard(diceBag.fourByFOurDice));\r\n        break;\r\n      case \"fiveByFiveDice\":\r\n        setBoard(newBoard(diceBag.fiveByFiveDice));\r\n        break;\r\n      case \"sixBySixDice\":\r\n        setBoard(newBoard(diceBag.sixBySixDice));\r\n        break;\r\n      default:\r\n        setBoard(newBoard(diceBag.fiveByFiveDice));\r\n        break;\r\n    }\r\n  };\r\n\r\n  const pasteBoard = async () => {\r\n    const codedBoard = await navigator.clipboard.readText();\r\n    const decodedBoard = codedBoard.split(/(?=[A-Z#])/).map((value) => {\r\n      if (value === \"#\" || value.length === 2) {\r\n        return value;\r\n      } else if (value === \"A\") return \"Z\";\r\n      return String.fromCharCode(value.charCodeAt(0) - 1);\r\n    });\r\n    if (decodedBoard.length === board.length) setBoard(decodedBoard);\r\n  };\r\n\r\n  const copyBoard = () => {\r\n    let secretBoard = board.map((value) => {\r\n      if (value === \"#\" || value.length === 2) {\r\n        return value;\r\n      } else if (value === \"Z\") return \"A\";\r\n      return String.fromCharCode(value.charCodeAt(0) + 1);\r\n    });\r\n    let copyText = secretBoard.join(\"\");\r\n    navigator.clipboard.writeText(copyText);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"app-container\">\r\n        <Timer />\r\n        <div className=\"board-container\">\r\n          <div className={\"board\"}>\r\n            {board.map((value, index) => (\r\n              <div\r\n                key={index}\r\n                className={\r\n                  board.length === 16\r\n                    ? \"dice dice__4x4\"\r\n                    : board.length === 25\r\n                    ? \"dice dice__5x5\"\r\n                    : \"dice dice__6x6\"\r\n                }\r\n              >\r\n                {value}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"options\">\r\n          <div className=\"size\">\r\n            <button onClick={resetBoard}>Shuffle Board</button>\r\n            <select\r\n              name=\"board-size-selection\"\r\n              onChange={changeBoardSize}\r\n              defaultValue=\"sixBySixDice\"\r\n            >\r\n              <option value=\"fourByFOurDice\">4x4</option>\r\n              <option value=\"fiveByFiveDice\">5x5</option>\r\n              <option value=\"sixBySixDice\">6x6</option>\r\n            </select>\r\n          </div>\r\n          <button onClick={copyBoard}>Copy Board</button>\r\n          <button onClick={pasteBoard}>Enter Board</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}